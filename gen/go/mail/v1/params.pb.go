// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: mail/v1/params.proto

package mailv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/byteflowing/proto/gen/go/enums/v1"
	_ "github.com/byteflowing/proto/gen/go/validation/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MailAddress struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 邮件地址
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// 地址对应的名称
	Name          *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MailAddress) Reset() {
	*x = MailAddress{}
	mi := &file_mail_v1_params_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MailAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailAddress) ProtoMessage() {}

func (x *MailAddress) ProtoReflect() protoreflect.Message {
	mi := &file_mail_v1_params_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailAddress.ProtoReflect.Descriptor instead.
func (*MailAddress) Descriptor() ([]byte, []int) {
	return file_mail_v1_params_proto_rawDescGZIP(), []int{0}
}

func (x *MailAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MailAddress) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type SendMailReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 邮件服务商
	Vendor v1.MailVendor `protobuf:"varint,1,opt,name=vendor,proto3,enum=enums.v1.MailVendor" json:"vendor,omitempty"`
	// 账号
	Account string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	// 发件人信息
	From *MailAddress `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	// 收件人信息
	To []*MailAddress `protobuf:"bytes,4,rep,name=to,proto3" json:"to,omitempty"`
	// 抄送邮箱列表（所有收件人都能看到被抄送的地址）
	Cc []*MailAddress `protobuf:"bytes,5,rep,name=cc,proto3" json:"cc,omitempty"`
	// 密送邮箱列表（其他收件人看不到被密送的地址）
	Bcc []*MailAddress `protobuf:"bytes,6,rep,name=bcc,proto3" json:"bcc,omitempty"`
	// 邮件主题（标题）
	Subject string `protobuf:"bytes,7,opt,name=subject,proto3" json:"subject,omitempty"`
	// 邮件正文格式（不带格式，兼容性最好）
	ContentType v1.MailContentType `protobuf:"varint,8,opt,name=content_type,json=contentType,proto3,enum=enums.v1.MailContentType" json:"content_type,omitempty"`
	// 邮件正文的内容（可以带样式、图片、超链接等）
	Content string `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`
	// 附件文件路径列表（本地文件路径，支持多个附件）
	Attachments   []string `protobuf:"bytes,10,rep,name=attachments,proto3" json:"attachments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMailReq) Reset() {
	*x = SendMailReq{}
	mi := &file_mail_v1_params_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMailReq) ProtoMessage() {}

func (x *SendMailReq) ProtoReflect() protoreflect.Message {
	mi := &file_mail_v1_params_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMailReq.ProtoReflect.Descriptor instead.
func (*SendMailReq) Descriptor() ([]byte, []int) {
	return file_mail_v1_params_proto_rawDescGZIP(), []int{1}
}

func (x *SendMailReq) GetVendor() v1.MailVendor {
	if x != nil {
		return x.Vendor
	}
	return v1.MailVendor(0)
}

func (x *SendMailReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *SendMailReq) GetFrom() *MailAddress {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *SendMailReq) GetTo() []*MailAddress {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *SendMailReq) GetCc() []*MailAddress {
	if x != nil {
		return x.Cc
	}
	return nil
}

func (x *SendMailReq) GetBcc() []*MailAddress {
	if x != nil {
		return x.Bcc
	}
	return nil
}

func (x *SendMailReq) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SendMailReq) GetContentType() v1.MailContentType {
	if x != nil {
		return x.ContentType
	}
	return v1.MailContentType(0)
}

func (x *SendMailReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendMailReq) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type SendMailResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMailResp) Reset() {
	*x = SendMailResp{}
	mi := &file_mail_v1_params_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMailResp) ProtoMessage() {}

func (x *SendMailResp) ProtoReflect() protoreflect.Message {
	mi := &file_mail_v1_params_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMailResp.ProtoReflect.Descriptor instead.
func (*SendMailResp) Descriptor() ([]byte, []int) {
	return file_mail_v1_params_proto_rawDescGZIP(), []int{2}
}

var File_mail_v1_params_proto protoreflect.FileDescriptor

const file_mail_v1_params_proto_rawDesc = "" +
	"\n" +
	"\x14mail/v1/params.proto\x12\amail.v1\x1a\x16enums/v1/message.proto\x1a\x1bbuf/validate/validate.proto\x1a$validation/v1/predefined_rules.proto\"^\n" +
	"\vMailAddress\x12!\n" +
	"\aaddress\x18\x01 \x01(\tB\a\xbaH\x04r\x02`\x01R\aaddress\x12#\n" +
	"\x04name\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05С\xe9\x03\x01H\x00R\x04name\x88\x01\x01B\a\n" +
	"\x05_name\"\xf1\x03\n" +
	"\vSendMailReq\x129\n" +
	"\x06vendor\x18\x01 \x01(\x0e2\x14.enums.v1.MailVendorB\v\xbaH\b\x82\x01\x05\xc8\xe2\xe8\x03\x01R\x06vendor\x12$\n" +
	"\aaccount\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\xa0\xa1\xe9\x03\x01R\aaccount\x120\n" +
	"\x04from\x18\x03 \x01(\v2\x14.mail.v1.MailAddressB\x06\xbaH\x03\xc8\x01\x01R\x04from\x12.\n" +
	"\x02to\x18\x04 \x03(\v2\x14.mail.v1.MailAddressB\b\xbaH\x05\x92\x01\x02\b\x01R\x02to\x12.\n" +
	"\x02cc\x18\x05 \x03(\v2\x14.mail.v1.MailAddressB\b\xbaH\x05\x92\x01\x02\x10dR\x02cc\x120\n" +
	"\x03bcc\x18\x06 \x03(\v2\x14.mail.v1.MailAddressB\b\xbaH\x05\x92\x01\x02\x10dR\x03bcc\x12$\n" +
	"\asubject\x18\a \x01(\tB\n" +
	"\xbaH\ar\x05\xa0\xa1\xe9\x03\x01R\asubject\x12I\n" +
	"\fcontent_type\x18\b \x01(\x0e2\x19.enums.v1.MailContentTypeB\v\xbaH\b\x82\x01\x05\xc8\xe2\xe8\x03\x01R\vcontentType\x12 \n" +
	"\acontent\x18\t \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\acontent\x12*\n" +
	"\vattachments\x18\n" +
	" \x03(\tB\b\xbaH\x05\x92\x01\x02\x10\x14R\vattachments\"\x0e\n" +
	"\fSendMailRespB\x8b\x01\n" +
	"\vcom.mail.v1B\vParamsProtoP\x01Z2github.com/byteflowing/proto/gen/go/mail/v1;mailv1\xa2\x02\x03MXX\xaa\x02\aMail.V1\xca\x02\aMail\\V1\xe2\x02\x13Mail\\V1\\GPBMetadata\xea\x02\bMail::V1b\x06proto3"

var (
	file_mail_v1_params_proto_rawDescOnce sync.Once
	file_mail_v1_params_proto_rawDescData []byte
)

func file_mail_v1_params_proto_rawDescGZIP() []byte {
	file_mail_v1_params_proto_rawDescOnce.Do(func() {
		file_mail_v1_params_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mail_v1_params_proto_rawDesc), len(file_mail_v1_params_proto_rawDesc)))
	})
	return file_mail_v1_params_proto_rawDescData
}

var file_mail_v1_params_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_mail_v1_params_proto_goTypes = []any{
	(*MailAddress)(nil),     // 0: mail.v1.MailAddress
	(*SendMailReq)(nil),     // 1: mail.v1.SendMailReq
	(*SendMailResp)(nil),    // 2: mail.v1.SendMailResp
	(v1.MailVendor)(0),      // 3: enums.v1.MailVendor
	(v1.MailContentType)(0), // 4: enums.v1.MailContentType
}
var file_mail_v1_params_proto_depIdxs = []int32{
	3, // 0: mail.v1.SendMailReq.vendor:type_name -> enums.v1.MailVendor
	0, // 1: mail.v1.SendMailReq.from:type_name -> mail.v1.MailAddress
	0, // 2: mail.v1.SendMailReq.to:type_name -> mail.v1.MailAddress
	0, // 3: mail.v1.SendMailReq.cc:type_name -> mail.v1.MailAddress
	0, // 4: mail.v1.SendMailReq.bcc:type_name -> mail.v1.MailAddress
	4, // 5: mail.v1.SendMailReq.content_type:type_name -> enums.v1.MailContentType
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_mail_v1_params_proto_init() }
func file_mail_v1_params_proto_init() {
	if File_mail_v1_params_proto != nil {
		return
	}
	file_mail_v1_params_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mail_v1_params_proto_rawDesc), len(file_mail_v1_params_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mail_v1_params_proto_goTypes,
		DependencyIndexes: file_mail_v1_params_proto_depIdxs,
		MessageInfos:      file_mail_v1_params_proto_msgTypes,
	}.Build()
	File_mail_v1_params_proto = out.File
	file_mail_v1_params_proto_goTypes = nil
	file_mail_v1_params_proto_depIdxs = nil
}
