// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: mail/v1/config.proto

package mailv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/byteflowing/base/gen/enums/v1"
	_ "github.com/byteflowing/base/gen/validation/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SMTP struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 主机地址 e.g. mail.example.com
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// 端口号
	Port int32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// 用户名
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// 密码
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// 测试时可以跳过tls
	SkipTls bool `protobuf:"varint,5,opt,name=skip_tls,json=skipTls,proto3" json:"skip_tls,omitempty"`
	// 超时时间
	Timeout       *durationpb.Duration `protobuf:"bytes,6,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SMTP) Reset() {
	*x = SMTP{}
	mi := &file_mail_v1_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SMTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMTP) ProtoMessage() {}

func (x *SMTP) ProtoReflect() protoreflect.Message {
	mi := &file_mail_v1_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMTP.ProtoReflect.Descriptor instead.
func (*SMTP) Descriptor() ([]byte, []int) {
	return file_mail_v1_config_proto_rawDescGZIP(), []int{0}
}

func (x *SMTP) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SMTP) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *SMTP) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SMTP) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SMTP) GetSkipTls() bool {
	if x != nil {
		return x.SkipTls
	}
	return false
}

func (x *SMTP) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type MailProvider struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 服务商
	Vendor v1.MailVendor `protobuf:"varint,1,opt,name=vendor,proto3,enum=enums.v1.MailVendor" json:"vendor,omitempty"`
	// 账号用于区分多账号
	Account string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	// 限流的时间间隔
	LimitDuration *durationpb.Duration `protobuf:"bytes,3,opt,name=limit_duration,json=limitDuration,proto3" json:"limit_duration,omitempty"`
	// 限流的最大值
	LimitMax int64 `protobuf:"varint,4,opt,name=limit_max,json=limitMax,proto3" json:"limit_max,omitempty"`
	// 最大连接数
	MaxConnections int64 `protobuf:"varint,5,opt,name=max_connections,json=maxConnections,proto3" json:"max_connections,omitempty"`
	// smtp配置
	Smtp          *SMTP `protobuf:"bytes,6,opt,name=smtp,proto3" json:"smtp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MailProvider) Reset() {
	*x = MailProvider{}
	mi := &file_mail_v1_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MailProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailProvider) ProtoMessage() {}

func (x *MailProvider) ProtoReflect() protoreflect.Message {
	mi := &file_mail_v1_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailProvider.ProtoReflect.Descriptor instead.
func (*MailProvider) Descriptor() ([]byte, []int) {
	return file_mail_v1_config_proto_rawDescGZIP(), []int{1}
}

func (x *MailProvider) GetVendor() v1.MailVendor {
	if x != nil {
		return x.Vendor
	}
	return v1.MailVendor(0)
}

func (x *MailProvider) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *MailProvider) GetLimitDuration() *durationpb.Duration {
	if x != nil {
		return x.LimitDuration
	}
	return nil
}

func (x *MailProvider) GetLimitMax() int64 {
	if x != nil {
		return x.LimitMax
	}
	return 0
}

func (x *MailProvider) GetMaxConnections() int64 {
	if x != nil {
		return x.MaxConnections
	}
	return 0
}

func (x *MailProvider) GetSmtp() *SMTP {
	if x != nil {
		return x.Smtp
	}
	return nil
}

type Mail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Providers     []*MailProvider        `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mail) Reset() {
	*x = Mail{}
	mi := &file_mail_v1_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mail) ProtoMessage() {}

func (x *Mail) ProtoReflect() protoreflect.Message {
	mi := &file_mail_v1_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mail.ProtoReflect.Descriptor instead.
func (*Mail) Descriptor() ([]byte, []int) {
	return file_mail_v1_config_proto_rawDescGZIP(), []int{2}
}

func (x *Mail) GetProviders() []*MailProvider {
	if x != nil {
		return x.Providers
	}
	return nil
}

var File_mail_v1_config_proto protoreflect.FileDescriptor

const file_mail_v1_config_proto_rawDesc = "" +
	"\n" +
	"\x14mail/v1/config.proto\x12\amail.v1\x1a\x16enums/v1/message.proto\x1a$validation/v1/predefined_rules.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bbuf/validate/validate.proto\"\xed\x01\n" +
	"\x04SMTP\x12\x1b\n" +
	"\x04host\x18\x01 \x01(\tB\a\xbaH\x04r\x02h\x01R\x04host\x12\x1b\n" +
	"\x04port\x18\x02 \x01(\x05B\a\xbaH\x04\x1a\x02 \x00R\x04port\x12'\n" +
	"\tuser_name\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\xa0\xa1\xe9\x03\x01R\buserName\x12&\n" +
	"\bpassword\x18\x04 \x01(\tB\n" +
	"\xbaH\ar\x05\xa0\xa1\xe9\x03\x01R\bpassword\x12\x19\n" +
	"\bskip_tls\x18\x05 \x01(\bR\askipTls\x12?\n" +
	"\atimeout\x18\x06 \x01(\v2\x19.google.protobuf.DurationB\n" +
	"\xbaH\a\xaa\x01\x042\x02\b\x01R\atimeout\"\xc4\x02\n" +
	"\fMailProvider\x129\n" +
	"\x06vendor\x18\x01 \x01(\x0e2\x14.enums.v1.MailVendorB\v\xbaH\b\x82\x01\x05\xc8\xe2\xe8\x03\x01R\x06vendor\x12$\n" +
	"\aaccount\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\xa0\xa1\xe9\x03\x01R\aaccount\x12L\n" +
	"\x0elimit_duration\x18\x03 \x01(\v2\x19.google.protobuf.DurationB\n" +
	"\xbaH\a\xaa\x01\x042\x02\b\x01R\rlimitDuration\x12&\n" +
	"\tlimit_max\x18\x04 \x01(\x03B\t\xbaH\x06\"\x04\x18d \x00R\blimitMax\x122\n" +
	"\x0fmax_connections\x18\x05 \x01(\x03B\t\xbaH\x06\"\x04\x18d \x00R\x0emaxConnections\x12)\n" +
	"\x04smtp\x18\x06 \x01(\v2\r.mail.v1.SMTPB\x06\xbaH\x03\xc8\x01\x01R\x04smtp\";\n" +
	"\x04Mail\x123\n" +
	"\tproviders\x18\x01 \x03(\v2\x15.mail.v1.MailProviderR\tprovidersB\x87\x01\n" +
	"\vcom.mail.v1B\vConfigProtoP\x01Z.github.com/byteflowing/base/gen/mail/v1;mailv1\xa2\x02\x03MXX\xaa\x02\aMail.V1\xca\x02\aMail\\V1\xe2\x02\x13Mail\\V1\\GPBMetadata\xea\x02\bMail::V1b\x06proto3"

var (
	file_mail_v1_config_proto_rawDescOnce sync.Once
	file_mail_v1_config_proto_rawDescData []byte
)

func file_mail_v1_config_proto_rawDescGZIP() []byte {
	file_mail_v1_config_proto_rawDescOnce.Do(func() {
		file_mail_v1_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mail_v1_config_proto_rawDesc), len(file_mail_v1_config_proto_rawDesc)))
	})
	return file_mail_v1_config_proto_rawDescData
}

var file_mail_v1_config_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_mail_v1_config_proto_goTypes = []any{
	(*SMTP)(nil),                // 0: mail.v1.SMTP
	(*MailProvider)(nil),        // 1: mail.v1.MailProvider
	(*Mail)(nil),                // 2: mail.v1.Mail
	(*durationpb.Duration)(nil), // 3: google.protobuf.Duration
	(v1.MailVendor)(0),          // 4: enums.v1.MailVendor
}
var file_mail_v1_config_proto_depIdxs = []int32{
	3, // 0: mail.v1.SMTP.timeout:type_name -> google.protobuf.Duration
	4, // 1: mail.v1.MailProvider.vendor:type_name -> enums.v1.MailVendor
	3, // 2: mail.v1.MailProvider.limit_duration:type_name -> google.protobuf.Duration
	0, // 3: mail.v1.MailProvider.smtp:type_name -> mail.v1.SMTP
	1, // 4: mail.v1.Mail.providers:type_name -> mail.v1.MailProvider
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_mail_v1_config_proto_init() }
func file_mail_v1_config_proto_init() {
	if File_mail_v1_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mail_v1_config_proto_rawDesc), len(file_mail_v1_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mail_v1_config_proto_goTypes,
		DependencyIndexes: file_mail_v1_config_proto_depIdxs,
		MessageInfos:      file_mail_v1_config_proto_msgTypes,
	}.Build()
	File_mail_v1_config_proto = out.File
	file_mail_v1_config_proto_goTypes = nil
	file_mail_v1_config_proto_depIdxs = nil
}
