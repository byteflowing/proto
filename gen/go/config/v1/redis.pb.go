// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: config/v1/redis.proto

package configv1

import (
	v1 "github.com/byteflowing/proto/gen/go/enums/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RedisConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          []string               `protobuf:"bytes,1,rep,name=host,proto3" json:"host,omitempty"`                               // 连接地址 e.g. 127.0.0.1:6379
	Type          v1.RedisType           `protobuf:"varint,2,opt,name=type,proto3,enum=enums.v1.RedisType" json:"type,omitempty"`      // 用户名
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`                       // 密码
	Db            int32                  `protobuf:"varint,4,opt,name=db,proto3" json:"db,omitempty"`                                  // redis db 0 - 16
	Tls           bool                   `protobuf:"varint,5,opt,name=tls,proto3" json:"tls,omitempty"`                                // 是否开启tls
	Protocol      int32                  `protobuf:"varint,6,opt,name=protocol,proto3" json:"protocol,omitempty"`                      // RESP版本：2或者3
	ClientName    string                 `protobuf:"bytes,7,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"` // 客户端名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedisConfig) Reset() {
	*x = RedisConfig{}
	mi := &file_config_v1_redis_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedisConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisConfig) ProtoMessage() {}

func (x *RedisConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_v1_redis_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisConfig.ProtoReflect.Descriptor instead.
func (*RedisConfig) Descriptor() ([]byte, []int) {
	return file_config_v1_redis_proto_rawDescGZIP(), []int{0}
}

func (x *RedisConfig) GetHost() []string {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *RedisConfig) GetType() v1.RedisType {
	if x != nil {
		return x.Type
	}
	return v1.RedisType(0)
}

func (x *RedisConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RedisConfig) GetDb() int32 {
	if x != nil {
		return x.Db
	}
	return 0
}

func (x *RedisConfig) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *RedisConfig) GetProtocol() int32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

func (x *RedisConfig) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

var File_config_v1_redis_proto protoreflect.FileDescriptor

const file_config_v1_redis_proto_rawDesc = "" +
	"\n" +
	"\x15config/v1/redis.proto\x12\tconfig.v1\x1a\x11enums/v1/db.proto\"\xc5\x01\n" +
	"\vRedisConfig\x12\x12\n" +
	"\x04host\x18\x01 \x03(\tR\x04host\x12'\n" +
	"\x04type\x18\x02 \x01(\x0e2\x13.enums.v1.RedisTypeR\x04type\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x0e\n" +
	"\x02db\x18\x04 \x01(\x05R\x02db\x12\x10\n" +
	"\x03tls\x18\x05 \x01(\bR\x03tls\x12\x1a\n" +
	"\bprotocol\x18\x06 \x01(\x05R\bprotocol\x12\x1f\n" +
	"\vclient_name\x18\a \x01(\tR\n" +
	"clientNameB\x98\x01\n" +
	"\rcom.config.v1B\n" +
	"RedisProtoP\x01Z6github.com/byteflowing/proto/gen/go/config/v1;configv1\xa2\x02\x03CXX\xaa\x02\tConfig.V1\xca\x02\tConfig\\V1\xe2\x02\x15Config\\V1\\GPBMetadata\xea\x02\n" +
	"Config::V1b\x06proto3"

var (
	file_config_v1_redis_proto_rawDescOnce sync.Once
	file_config_v1_redis_proto_rawDescData []byte
)

func file_config_v1_redis_proto_rawDescGZIP() []byte {
	file_config_v1_redis_proto_rawDescOnce.Do(func() {
		file_config_v1_redis_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_config_v1_redis_proto_rawDesc), len(file_config_v1_redis_proto_rawDesc)))
	})
	return file_config_v1_redis_proto_rawDescData
}

var file_config_v1_redis_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_config_v1_redis_proto_goTypes = []any{
	(*RedisConfig)(nil), // 0: config.v1.RedisConfig
	(v1.RedisType)(0),   // 1: enums.v1.RedisType
}
var file_config_v1_redis_proto_depIdxs = []int32{
	1, // 0: config.v1.RedisConfig.type:type_name -> enums.v1.RedisType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_config_v1_redis_proto_init() }
func file_config_v1_redis_proto_init() {
	if File_config_v1_redis_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_v1_redis_proto_rawDesc), len(file_config_v1_redis_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_v1_redis_proto_goTypes,
		DependencyIndexes: file_config_v1_redis_proto_depIdxs,
		MessageInfos:      file_config_v1_redis_proto_msgTypes,
	}.Build()
	File_config_v1_redis_proto = out.File
	file_config_v1_redis_proto_goTypes = nil
	file_config_v1_redis_proto_depIdxs = nil
}
