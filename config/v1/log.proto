syntax = "proto3";

package config.v1;

import "enums/v1/log.proto";

message RotationConfig {
  string log_file = 1; // 文件名
  uint32 max_size = 2; // 文件大小，单位M
  uint32 max_age = 3; // 最长保留天数
  uint32 max_backups = 4; // 最多保留分数
  bool compress = 5; // 是否启用压缩
  bool local_time = 6; // 是否使用本地时间
}

message ZapLogOutput {
  enums.v1.LogOut output = 1;
  repeated enums.v1.LogLevel levels = 2;
  config.v1.RotationConfig log_file = 3;
}

message ZapLogKeyConfig {
  string name_key = 1;
  string level_key = 2;
  string message_key = 3;
  string time_key = 4;
  string caller_key = 5;
  string stack_trace_key = 6;
  string function_key = 7;
}

message ZapLogConfig {
    enums.v1.LogMode mode = 1;
    enums.v1.LogFormat format = 2;
    enums.v1.LogLevel level = 3;
    bool report_caller = 4;
    bool short_caller = 5;
    int32 caller_skip = 6;
    enums.v1.LogLevel add_stack_trace_level = 7;
    string service_name = 8;
    // 如果需要将logId放入ctx中
    // 设置这个key，调用Ctx开头的日志记录方法会去ctx中查找logID,然后一并记录到日志中
    string ctx_log_id_key = 9;
    // log_id在日志中的field名称
    string log_id_key = 10;
    ZapLogKeyConfig keys = 11;
    // 是否将所有错误日志记录，默认只记录非业务逻辑产生的错误日志
    bool record_all_errors = 12;
    repeated ZapLogOutput outputs = 13;
}