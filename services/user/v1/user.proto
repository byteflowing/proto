syntax = "proto3";

package services.user.v1;

import "enums/v1/user.proto";
import "enums/v1/message.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "buf/validate/validate.proto";
import "validation/v1/predefined_rules.proto";
import "types/v1/types.proto";
import "google/type/date.proto";
import "captcha/v1/captcha.proto";
import "limiter/v1/limiter.proto";

message UserProfile {
  int64 uid = 1; // userid
  string number = 2; // 用户编号
  string biz = 3; // 业务编号
  int32 user_type = 4; // 用户类型，业务自定义
  int32 user_level = 5; // 用户等级，业务自定义
  enums.v1.AuthType auth_type = 6; // 认证类型
  string appid = 7; // appid
  string openid = 8; // openid
  string unionid = 9; // unionid
  string session_id = 10; // session_id
  google.protobuf.Any extra = 11; // 调用方自定义字段
}

message UserInfo {
  int64 uid = 1; // 用户id
  string biz = 2; // 业务编号
  string number = 3; // 用户编号
  enums.v1.UserStatus status = 4; // 状态
  enums.v1.UserSource source = 5; // 用户来源
  enums.v1.AuthType sign_up_type = 6; // 注册方式
  optional int32 user_type = 7; // 用户类型，由业务方定义
  optional int32 user_level = 8; // 用户等级，由业务方定义
  optional string name = 9; // 姓名
  optional string alias = 10; // 别名
  optional string avatar = 11; // 头像
  optional enums.v1.Gender gender = 12; // 性别
  optional google.type.Date birthday = 13; // 生日
  optional types.v1.PhoneNumber phone_number = 14; // 手机
  optional string email = 15;// 邮箱
  optional types.v1.AdminRegion region = 16; // 行政区域
  optional string addr = 17; // 详细地址
  optional string ext = 18; // 扩展字段，json格式，（由业务方自定义）
  bool phone_verify = 19; // 手机是否验证
  bool email_verify = 20; // 邮箱是否验证
  string register_ip = 21; // 注册时ip
  string register_device = 22; // 注册设备
  string register_agent = 23; // ua
  google.protobuf.Timestamp password_updated_at = 24; // 上次密码修改时间
  google.protobuf.Timestamp delete_at = 25; // 删除时间
  google.protobuf.Timestamp updated_at = 26; // 更新时间
  google.protobuf.Timestamp created_at = 27; // 更新时间
}

message UserAuth {
  int64 id = 1;
  int64 uid = 2;
  enums.v1.AuthType type = 3;
  enums.v1.AuthStatus status = 4;
  string app_id = 5;
  string identifier = 6;
  string biz = 255;
}

message SendCaptchaReq {
  captcha.v1.SendCaptchaReq captcha_params = 2;
}

message SendCaptchaResp {
  // 验证码存取的key，使用这个key在kv存储中找验证码
  string token = 1;
  // 如果报错，这里有限制的原因
  optional limiter.v1.LimitRule limit = 2;
}

message VerifyCaptchaReq {
  string biz = 1;
  captcha.v1.VerifyCaptchaReq param = 2;
}

message VerifyCaptchaResp {
  string token = 1;
}

message SignUpReq {
  // 注册方式
  enums.v1.AuthType auth_type = 1 [
    (buf.validate.field).enum = {
      in: [4, 5]
    }
  ];
  // 用户编码，全局唯一, 数据库中定义的有唯一索引
  optional string number = 2 [(buf.validate.field).string.(validation.v1.required_20) = true];
  // 用户姓名
  optional string name = 3 [(buf.validate.field).string.(validation.v1.optional_30) = true];
  // 别名
  optional string alias = 4 [(buf.validate.field).string.(validation.v1.optional_20) = true];
  // 密码
  optional string password = 5 [(buf.validate.field).string.(validation.v1.optional_20) = true];
  // 头像
  optional string avatar = 6 [(buf.validate.field).string.(validation.v1.optional_255) = true];
  // 性别
  optional enums.v1.Gender gender = 7 [(buf.validate.field).enum.(validation.v1.not_unspecified) = true];
  // 生日
  optional google.type.Date birthday = 8;
  // 手机
  optional types.v1.PhoneNumber phone = 9;
  // 邮箱
  optional string email = 10 [(buf.validate.field).string.(validation.v1.optional_30) = true];
  // 行政区域
  optional types.v1.AdminRegion region = 11;
  // 详细地址
  optional string addr = 12 [(buf.validate.field).string.(validation.v1.optional_100) = true];
  // 状态
  optional enums.v1.UserStatus status = 13 [(buf.validate.field).enum.(validation.v1.not_unspecified) = true];
  // 用户类型（由业务方自定义）
  optional int32 type = 14 [(buf.validate.field).int32.gt = 0];
  // 用户等级（由业务方自定义）
  optional int32 level = 15 [(buf.validate.field).int32.gt = 0];
  // 用户来源
  optional enums.v1.UserSource source = 16 [(buf.validate.field).enum.(validation.v1.not_unspecified) = true];
  // 注册设备ip
  optional string ip = 17 [(buf.validate.field).string.ip = true];
  // 注册UA
  optional string agent = 18 [(buf.validate.field).string.(validation.v1.optional_255) = true];
  // 注册设备信息
  optional string device = 19 [(buf.validate.field).string.(validation.v1.optional_255) = true];
  // 扩展字段，json格式，（由业务方自定义）
  optional string ext = 20;
  // 验证码
  string captcha = 21 [(buf.validate.field).string.(validation.v1.required_10) = true];
  // 验证码token
  string captcha_token = 22 [(buf.validate.field).string.uuid = true];
  string captcha_type = 23;
  string biz = 255;
}

message SignUpResp {
  UserInfo user_info = 1;
  optional limiter.v1.LimitRule rule = 2;
}

message SignInReq {
  // 认证类型，例如 "password", "email", "wechat"
  enums.v1.AuthType auth_type = 1 [(buf.validate.field).enum.(validation.v1.not_unspecified) = true];
  // 用户名、邮箱等
  // 根据AuthType这里可以是邮箱，账号，验证码token，appid等
  string identifier = 2 [(buf.validate.field).string.(validation.v1.required_50) = true];
  // 密码、验证码等
  // 如果是验证码登录，这里是验证码
  // 如果是微信登录这里是code
  string credential = 3 [(buf.validate.field).string.(validation.v1.required_50) = true];
  // 手机号,跟手机登录有关的手机号码必须填在这里
  types.v1.PhoneNumber phone_number = 4;
  // jwt除标准字段外的自定义字段
  google.protobuf.Any extra_jwt_claims = 5;
  // 如果通过验证码登录，这里是验证码在redis中的key
  optional string captcha_token = 6 [(buf.validate.field).string.uuid = true];
  // 登录 IP
  optional string ip = 7 [(buf.validate.field).string.ip = true];
  // 用户位置
  optional string location = 8 [(buf.validate.field).string.(validation.v1.optional_255) = true];
  // UA 信息
  optional string user_agent = 9 [(buf.validate.field).string.(validation.v1.optional_255) = true];
  // 设备信息
  optional string device = 10 [(buf.validate.field).string.(validation.v1.optional_255) = true];
  string captcha_type = 23;
  string biz = 255;
}

message SignInResp {
  // jwt token
  // uid 用户id（自定义字段）
  // type token类型（自定义字段：access，refresh）
  // auth_type 认证类型
  // appid 客户端id（如微信的appid，目前仅微信登录有值）
  // openid 微信登录的openid
  // unionid 微信登录的unionid(若有)
  // extra 调用方添加的自定义字段
  // iss 签发方
  // sub user表number字段
  // aud 暂时不用
  // exp 过期时间秒级时间戳
  // nbf 暂时使用签发时间填充(立刻生效)秒级时间戳
  // iat 签发时间秒级时间戳
  // jti 使用uuid填充代表session_id
  string access_token = 1;
  string refresh_token = 2;
  UserInfo user_info = 3;
  optional limiter.v1.LimitRule rule = 4;
}

message SignOutReq {
  string session_id = 1 [(buf.validate.field).string.uuid = true];
  enums.v1.SessionStatus reason = 2 [
    (buf.validate.field).enum = {
      not_in: [0, 1]
    }
  ];
  enums.v1.AuthType auth_type = 3 [(buf.validate.field).enum.(validation.v1.not_unspecified) = true];
}

message SignOutResp {}

message SignOutByUidReq {
  // token中的uid
  int64 uid = 1 [(buf.validate.field).int64.gt = 0];
  enums.v1.SessionStatus reason = 2 [(buf.validate.field).enum.(validation.v1.not_unspecified) = true];
}

message SignOutByUidResp {}

message RefreshReq {
  // 刷新token
  string refresh_token = 1 [(buf.validate.field).required = true];
  // jwt除标准字段外的自定义字段
  google.protobuf.Any extra_jwt_claims = 2;
}

message RefreshResp {
  // 新的access_token
  string new_access_token = 1;
  // 新的refresh_token
  string new_refresh_token = 2;
}

message ChangePasswordReq {
  int64 uid = 1;
  string current_session_id = 2;
  string old_password = 3;
  string new_password = 4;
}

message ChangePasswordResp {}

message ResetPasswordReq {
  string reset_token = 1;
  string new_password = 2;
  string captcha_type = 3;
  enums.v1.MessageSenderType captcha_sender = 4;
}

message ResetPasswordResp {}

message ChangePhoneReq {
  string change_token = 1;
  types.v1.PhoneNumber phone = 2;
  string captcha_token = 3;
  string captcha = 4;
  string captcha_type = 5;
}

message ChangePhoneResp {}

message ChangeEmailReq {
  enums.v1.MessageSenderType sender = 1;
  string captcha_type = 2;
  string change_token = 3;
  string new_email = 4;
  string captcha_token = 5;
  string captcha = 6;
}

message ChangeEmailResp {}

message ChangeUserStatusResp {}

message ChangeUserAvatarReq {
  int64 uid = 1;
  string avatar = 2;
}

message ChangeUserAvatarResp {}

message ChangeUserGenderReq {
  int64 uid = 1;
  enums.v1.Gender gender = 2;
}

message ChangeUserGenderResp {}

message ChangeUserBirthdayReq {
  int64 uid = 1;
  google.type.Date birthday = 2;
}

message ChangeUserBirthdayResp {}

message ChangeUserNameReq {
  int64 uid = 1;
  string name = 2;
}

message ChangeUserNameResp {}

message ChangeUserAliasReq {
  int64 uid = 1;
  string alias = 2;
}

message ChangeUserAliasResp {}

message ChangeUserNumberReq {
  int64 uid = 1;
  string number = 2;
}

message ChangeUserNumberResp {}

message ChangeUserAddressReq {
  int64 uid = 1;
  string country_code = 2;
  string province_code = 3;
  string city_code = 4;
  string district_code = 5;
  string addr = 6;
}

message ChangeUserAddressResp {}

message ChangeUserTypeReq {
  int64 uid = 1;
  int32 type = 2;
}

message ChangeUserTypeResp {}

message ChangeUserLevelReq {
  int64 uid = 1;
  int32 level = 2;
}

message ChangeUserLevelResp {}

message ChangeUserExtReq {
  int64 uid = 1;
  string ext = 2;
}

message ChangeUserExtResp {}

message VerifyPhoneReq {
  int64 uid = 1;
  types.v1.PhoneNumber phone = 2;
  string captcha_token = 3;
  string captcha = 4;
  string captcha_type = 5;
}

message VerifyPhoneResp {}

message VerifyEmailReq {
  int64 uid = 1;
  string email = 2;
  string captcha_token = 3;
  string captcha = 4;
  string captcha_type = 5;
}

message VerifyEmailResp {}

message ChangeUserStatusReq {
  int64 uid = 1;
  enums.v1.UserStatus status = 2;
}

message VerifyTokenReq {
  enums.v1.TokenType type = 1;
  string token = 2 [(buf.validate.field).required = true];
}

message VerifyTokenResp {
  UserProfile user_info = 1;
}

message SignInLog {
  // 主键id
  int64 id = 1;
  // uid
  int64 uid = 2;
  // 认证类型
  enums.v1.AuthType type = 3;
  // 登录状态
  enums.v1.SessionStatus status = 4;
  // 访问token中的jti
  string access_token_id = 5;
  // 刷新token中的jti
  string refresh_token_id = 6;
  // 登录时ip
  optional string ip = 7;
  // 登录时位置
  optional string location = 8;
  // 登录的agent
  optional string agent = 9;
  // 登录设备
  optional string device = 10;
  // 删除时间
  optional int64 deleted_at = 11;
  // 访问token过期时间，毫秒时间戳
  google.protobuf.Timestamp access_expired_at = 12;
  // 刷新token过期时间，毫秒时间戳
  google.protobuf.Timestamp refresh_expired_at = 13;
  // 更新时间
  google.protobuf.Timestamp updated_at = 14;
  // 创建时间
  google.protobuf.Timestamp created_at = 15;
}

message GetActiveSignInLogsReq {
  int64 uid = 1 [(buf.validate.field).int64.gt = 0];
}

message GetActiveSignInLogsResp {
  repeated SignInLog logs = 1;
}

message PagingGetSignInLogsReq {
  // 第几页
  int32 page = 1 [(buf.validate.field).int32.gt = 0];
  // 每页数据量
  int32 size = 2 [
    (buf.validate.field).int32 = {
      gt: 0
      lte: 100
    }
  ];
  // 是否正序
  bool asc = 3;
  // 用户id
  optional int64 uid = 4 [(buf.validate.field).int64.gt = 0];
  // 认证类型
  repeated enums.v1.AuthType types = 5 [(buf.validate.field).repeated.items.enum.(validation.v1.not_unspecified) = true];
  // 登录状态
  repeated enums.v1.SessionStatus statuses = 6 [(buf.validate.field).repeated.items.enum.(validation.v1.not_unspecified) = true];
  string biz = 255;
}

message PagingGetSignInLogsResp {
  repeated SignInLog logs = 1;
  uint32 page = 2;
  uint32 size = 3;
  uint64 total = 4;
  uint32 total_pages = 5;
}

message PagingGetUsersReq {
  int32 page = 1;
  int32 size = 2;
  bool asc = 3;
  optional int64 uid = 4;
  optional string number = 5;
  optional string name = 6;
  optional enums.v1.Gender gender = 7;
  optional types.v1.PhoneNumber phone = 8;
  optional string email = 9;
  optional string country_code = 10;
  optional string province_code = 11;
  optional string city_code = 12;
  optional string district_code = 13;
  optional enums.v1.AuthType sign_up_type = 14;
  optional enums.v1.UserStatus status = 15;
  repeated enums.v1.UserSource source = 16;
  optional int32 type = 17;
  optional int32 level = 18;
  optional bool phone_verified = 19;
  optional bool email_verified = 20;
  optional google.type.Date birthday_start = 21;
  optional google.type.Date birthday_end = 22;
  optional google.protobuf.Timestamp created_at_start = 23;
  optional google.protobuf.Timestamp created_at_end = 24;
  optional google.protobuf.Timestamp updated_at_start = 25;
  optional google.protobuf.Timestamp updated_at_end = 26;
  optional google.protobuf.Timestamp deleted_at_start = 27;
  optional google.protobuf.Timestamp deleted_at_end = 28;
  bool show_deleted = 29;
  string biz = 255;
}

message PagingGetUsersResp {
  repeated UserInfo users = 1;
  uint32 page = 2;
  uint32 size = 3;
  uint64 total = 4;
  uint32 total_pages = 5;
}

message CreateUserReq {
  // 用户编码，全局唯一, 数据库中定义的有唯一索引
  optional string number = 1 [(buf.validate.field).string.(validation.v1.required_20) = true];
  // 用户姓名
  optional string name = 2 [(buf.validate.field).string.(validation.v1.optional_30) = true];
  // 别名
  optional string alias = 3 [(buf.validate.field).string.(validation.v1.optional_20) = true];
  // 密码
  optional string password = 4 [(buf.validate.field).string.(validation.v1.optional_20) = true];
  // 头像
  optional string avatar = 5 [(buf.validate.field).string.(validation.v1.optional_255) = true];
  // 性别
  optional enums.v1.Gender gender = 6 [(buf.validate.field).enum.(validation.v1.not_unspecified) = true];
  // 生日
  optional google.type.Date birthday = 7;
  // 手机
  optional types.v1.PhoneNumber phone = 8;
  // 邮箱
  optional string email = 9 [(buf.validate.field).string.(validation.v1.optional_30) = true];
  // 行政区域
  optional types.v1.AdminRegion region = 10;
  // 详细地址
  optional string addr = 11 [(buf.validate.field).string.(validation.v1.optional_100) = true];
  // 状态
  optional enums.v1.UserStatus status = 12 [(buf.validate.field).enum.(validation.v1.not_unspecified) = true];
  // 用户类型（由业务方自定义）
  optional int32 type = 13 [(buf.validate.field).int32.gt = 0];
  // 用户等级（由业务方自定义）
  optional int32 level = 14 [(buf.validate.field).int32.gt = 0];
  // 用户来源
  optional enums.v1.UserSource source = 15 [(buf.validate.field).enum.(validation.v1.not_unspecified) = true];
  // 扩展字段，json格式，（由业务方自定义）
  optional string ext = 16;
  // 业务编码
  string biz = 255;
}

message CreateUserResp {
  int64 uid = 1;
}

message DeleteUserReq {
  int64 uid = 1;
}

message DeleteUserResp {}

message DeleteUsersReq {
  repeated int64 uids = 1;
}

message DeleteUsersResp {}

message UpdateUserReq {
  // 用户id
  int64 uid = 1;
  // 用户编码，全局唯一, 数据库中定义的有唯一索引
  optional string number = 2 [(buf.validate.field).string.(validation.v1.required_20) = true];
  // 用户姓名
  optional string name = 3 [(buf.validate.field).string.(validation.v1.optional_30) = true];
  // 别名
  optional string alias = 4 [(buf.validate.field).string.(validation.v1.optional_20) = true];
  // 密码
  optional string password = 5 [(buf.validate.field).string.(validation.v1.optional_20) = true];
  // 头像
  optional string avatar = 6 [(buf.validate.field).string.(validation.v1.optional_255) = true];
  // 性别
  optional enums.v1.Gender gender = 7 [(buf.validate.field).enum.(validation.v1.not_unspecified) = true];
  // 生日
  optional google.type.Date birthday = 8;
  // 手机
  optional types.v1.PhoneNumber phone = 9;
  // 邮箱
  optional string email = 10 [(buf.validate.field).string.(validation.v1.optional_30) = true];
  // 行政区域
  optional types.v1.AdminRegion region = 11;
  // 详细地址
  optional string addr = 12 [(buf.validate.field).string.(validation.v1.optional_100) = true];
  // 状态
  optional enums.v1.UserStatus status = 13 [(buf.validate.field).enum.(validation.v1.not_unspecified) = true];
  // 用户类型（由业务方自定义）
  optional int32 type = 14 [(buf.validate.field).int32.gt = 0];
  // 用户等级（由业务方自定义）
  optional int32 level = 15 [(buf.validate.field).int32.gt = 0];
  // 用户来源
  optional enums.v1.UserSource source = 16 [(buf.validate.field).enum.(validation.v1.not_unspecified) = true];
  // 扩展字段，json格式，（由业务方自定义）
  optional string ext = 17;
  string biz = 255;
}

message UpdateUserResp {}

message GetUserAuthReq {
  int64 uid = 1;
}

message GetUserAuthResp {
  repeated UserAuth auth = 1;
}

message BindUserAuthReq {
  enums.v1.AuthType type = 1;
  int64 uid = 2;
  optional string app_id = 3;
  optional string code = 4;
  optional string captcha_token = 5;
  optional string captcha = 6;
  optional types.v1.PhoneNumber phone = 7;
  optional string email = 8;
  optional string captcha_type = 9;
  string biz = 255;
}

message BindUserAuthResp {}

message UnbindUserAuthReq {
  int64 uid = 1;
  string identifier = 2;
}

message UnbindUserAuthResp {}