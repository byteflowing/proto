syntax = "proto3";

package captcha.v1;

import "enums/v1/message.proto";
import "mail/v1/params.proto";
import "sms/v1/params.proto";
import "types/v1/types.proto";
import "limiter/v1/limiter.proto";

message SendCaptchaReq {
  // 发送验证的程序
  // sms, email等等
  enums.v1.MessageSenderType sender_type = 1;
  // 验证码内容
  string captcha = 2;
  // 验证码类型，业务方定义
  string captcha_type = 3;
  oneof sender {
    // 如果sender_type是sms使用这个
    sms.v1.SendSmsReq sms = 4;
    // 如果sender_type是mail使用这个
    mail.v1.SendMailReq mail = 5;
  }
}

message SendCaptchaResp {
  message Data {
    // 验证码存取的key，使用这个key在kv存储中找验证码
    string token = 1;
    // 如果报错，这里有限制的原因
    limiter.v1.LimitRule limit = 2;
  }
  // 正常返回0，错误返回非0
  uint32 err_code = 1;
  // 正常返回OK, 错误返回错误内容
  string err_msg = 2;
  // 开发模式，返回详细错误信息
  string err_detail = 3;
  Data data = 4;
}

message VerifyCaptchaReq {
  // 验证码发送程序
  enums.v1.MessageSenderType sender_type = 1;
  // 发送验证码时返回的token
  string token = 2;
  // 验证码
  string captcha = 3;
  // 验证码类型，业务方定义
  string captcha_type = 4;
  // 发送验证码的手机号或者邮箱等账号，根据sender_type来填写对应的号码
  oneof number {
    types.v1.PhoneNumber phone_number = 5;
    string email = 6;
  };
}

message VerifyCaptchaResp {
  // 正常返回0，错误返回非0
  uint32 err_code = 1;
  // 正常返回OK, 错误返回错误内容
  string err_msg = 2;
  // 开发模式，返回详细错误信息
  string err_detail = 3;
}
