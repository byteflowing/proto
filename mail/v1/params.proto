syntax = "proto3";

package mail.v1;

import "enums/v1/message.proto";
import "buf/validate/validate.proto";
import "validation/v1/predefined_rules.proto";

message MailAddress {
  // 邮件地址
  string address = 1 [(buf.validate.field).string.email = true];
  // 地址对应的名称
  optional string name = 2 [(buf.validate.field).string.(validation.v1.optional_20) = true];
}

message SendMailReq {
  // 邮件服务商
  enums.v1.MailVendor vendor = 1 [(buf.validate.field).enum.(validation.v1.not_unspecified) = true];
  // 账号
  string account = 2 [(buf.validate.field).string.(validation.v1.required_50) = true];
  // 发件人信息
  MailAddress from = 3 [(buf.validate.field).required = true];
  // 收件人信息
  repeated MailAddress to = 4 [(buf.validate.field).repeated.min_items = 1];
  // 抄送邮箱列表（所有收件人都能看到被抄送的地址）
  repeated MailAddress cc = 5 [(buf.validate.field).repeated = {max_items: 100}];
  // 密送邮箱列表（其他收件人看不到被密送的地址）
  repeated MailAddress bcc = 6 [(buf.validate.field).repeated = {max_items: 100}];
  // 邮件主题（标题）
  string subject = 7 [(buf.validate.field).string.(validation.v1.required_50) = true];
  // 邮件正文格式（不带格式，兼容性最好）
  enums.v1.MailContentType content_type = 8 [(buf.validate.field).enum.(validation.v1.not_unspecified) = true];
  // 邮件正文的内容（可以带样式、图片、超链接等）
  string content = 9 [(buf.validate.field).required = true];
  // 附件文件路径列表（本地文件路径，支持多个附件）
  repeated string attachments = 10 [(buf.validate.field).repeated.max_items = 20];
}

message SendMailResp {
  // 正常返回0，错误返回非0
  uint32 err_code = 1;
  // 正常返回OK, 错误返回错误内容
  string err_msg = 2;
  // 开发模式，返回详细错误信息
  string err_detail = 3;
}
